/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2017-02-15 17:18:02 UTC)
 * on 2017-02-26 at 17:11:06 UTC 
 * Modify at your own risk.
 */

package none.bjorneparkappen_api;

/**
 * Service definition for BjorneparkappenApi (v1.0).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link BjorneparkappenApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class BjorneparkappenApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0 of the bjorneparkappen_api library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "http://None/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "bjorneparkappen_api/v1.0/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public BjorneparkappenApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  BjorneparkappenApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Animals collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code BjorneparkappenApi bjorneparkappen_api = new BjorneparkappenApi(...);}
   *   {@code BjorneparkappenApi.Animals.List request = bjorneparkappen_api.animals().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Animals animals() {
    return new Animals();
  }

  /**
   * The "animals" collection of methods.
   */
  public class Animals {

    /**
     * Create a request for the method "animals.all".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link All#execute()} method to invoke the remote operation.
     *
     * @param languageCode
     * @return the request
     */
    public All all(java.lang.String languageCode) throws java.io.IOException {
      All result = new All(languageCode);
      initialize(result);
      return result;
    }

    public class All extends BjorneparkappenApiRequest<none.bjorneparkappen_api.model.MainAnimalListResponse> {

      private static final String REST_PATH = "animals/all";

      /**
       * Create a request for the method "animals.all".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link All#execute()} method to invoke the remote operation.
       * <p> {@link
       * All#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param languageCode
       * @since 1.13
       */
      protected All(java.lang.String languageCode) {
        super(BjorneparkappenApi.this, "GET", REST_PATH, null, none.bjorneparkappen_api.model.MainAnimalListResponse.class);
        this.languageCode = com.google.api.client.util.Preconditions.checkNotNull(languageCode, "Required parameter languageCode must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public All setAlt(java.lang.String alt) {
        return (All) super.setAlt(alt);
      }

      @Override
      public All setFields(java.lang.String fields) {
        return (All) super.setFields(fields);
      }

      @Override
      public All setKey(java.lang.String key) {
        return (All) super.setKey(key);
      }

      @Override
      public All setOauthToken(java.lang.String oauthToken) {
        return (All) super.setOauthToken(oauthToken);
      }

      @Override
      public All setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (All) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public All setQuotaUser(java.lang.String quotaUser) {
        return (All) super.setQuotaUser(quotaUser);
      }

      @Override
      public All setUserIp(java.lang.String userIp) {
        return (All) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("language_code")
      private java.lang.String languageCode;

      /**

       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      public All setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      @Override
      public All set(String parameterName, Object value) {
        return (All) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "animals.create".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
     * @return the request
     */
    public Create create(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends BjorneparkappenApiRequest<Void> {

      private static final String REST_PATH = "animals/create";

      /**
       * Create a request for the method "animals.create".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link Create#execute()} method to invoke the remote
       * operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
       * @since 1.13
       */
      protected Create(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) {
        super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUserIp(java.lang.String userIp) {
        return (Create) super.setUserIp(userIp);
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "animals.delete".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param speciesId
     * @param animalId
     * @return the request
     */
    public Delete delete(java.lang.Long speciesId, java.lang.Long animalId) throws java.io.IOException {
      Delete result = new Delete(speciesId, animalId);
      initialize(result);
      return result;
    }

    public class Delete extends BjorneparkappenApiRequest<Void> {

      private static final String REST_PATH = "animals/delete";

      /**
       * Create a request for the method "animals.delete".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
       * operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param speciesId
       * @param animalId
       * @since 1.13
       */
      protected Delete(java.lang.Long speciesId, java.lang.Long animalId) {
        super(BjorneparkappenApi.this, "DELETE", REST_PATH, null, Void.class);
        this.speciesId = com.google.api.client.util.Preconditions.checkNotNull(speciesId, "Required parameter speciesId must be specified.");
        this.animalId = com.google.api.client.util.Preconditions.checkNotNull(animalId, "Required parameter animalId must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("species_id")
      private java.lang.Long speciesId;

      /**

       */
      public java.lang.Long getSpeciesId() {
        return speciesId;
      }

      public Delete setSpeciesId(java.lang.Long speciesId) {
        this.speciesId = speciesId;
        return this;
      }

      @com.google.api.client.util.Key("animal_id")
      private java.lang.Long animalId;

      /**

       */
      public java.lang.Long getAnimalId() {
        return animalId;
      }

      public Delete setAnimalId(java.lang.Long animalId) {
        this.animalId = animalId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "animals.update".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
     * @return the request
     */
    public Update update(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) throws java.io.IOException {
      Update result = new Update(content);
      initialize(result);
      return result;
    }

    public class Update extends BjorneparkappenApiRequest<Void> {

      private static final String REST_PATH = "animals/update";

      /**
       * Create a request for the method "animals.update".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link Update#execute()} method to invoke the remote
       * operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
       * @since 1.13
       */
      protected Update(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) {
        super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Areas collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code BjorneparkappenApi bjorneparkappen_api = new BjorneparkappenApi(...);}
   *   {@code BjorneparkappenApi.Areas.List request = bjorneparkappen_api.areas().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Areas areas() {
    return new Areas();
  }

  /**
   * The "areas" collection of methods.
   */
  public class Areas {

    /**
     * Create a request for the method "areas.all".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link All#execute()} method to invoke the remote operation.
     *
     * @param languageCode
     * @return the request
     */
    public All all(java.lang.String languageCode) throws java.io.IOException {
      All result = new All(languageCode);
      initialize(result);
      return result;
    }

    public class All extends BjorneparkappenApiRequest<none.bjorneparkappen_api.model.MainAreaListResponse> {

      private static final String REST_PATH = "areas/all";

      /**
       * Create a request for the method "areas.all".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link All#execute()} method to invoke the remote operation.
       * <p> {@link
       * All#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param languageCode
       * @since 1.13
       */
      protected All(java.lang.String languageCode) {
        super(BjorneparkappenApi.this, "GET", REST_PATH, null, none.bjorneparkappen_api.model.MainAreaListResponse.class);
        this.languageCode = com.google.api.client.util.Preconditions.checkNotNull(languageCode, "Required parameter languageCode must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public All setAlt(java.lang.String alt) {
        return (All) super.setAlt(alt);
      }

      @Override
      public All setFields(java.lang.String fields) {
        return (All) super.setFields(fields);
      }

      @Override
      public All setKey(java.lang.String key) {
        return (All) super.setKey(key);
      }

      @Override
      public All setOauthToken(java.lang.String oauthToken) {
        return (All) super.setOauthToken(oauthToken);
      }

      @Override
      public All setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (All) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public All setQuotaUser(java.lang.String quotaUser) {
        return (All) super.setQuotaUser(quotaUser);
      }

      @Override
      public All setUserIp(java.lang.String userIp) {
        return (All) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("language_code")
      private java.lang.String languageCode;

      /**

       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      public All setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      @Override
      public All set(String parameterName, Object value) {
        return (All) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "areas.delete".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public Delete delete(java.lang.Long id) throws java.io.IOException {
      Delete result = new Delete(id);
      initialize(result);
      return result;
    }

    public class Delete extends BjorneparkappenApiRequest<Void> {

      private static final String REST_PATH = "areas/delete";

      /**
       * Create a request for the method "areas.delete".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
       * operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected Delete(java.lang.Long id) {
        super(BjorneparkappenApi.this, "DELETE", REST_PATH, null, Void.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public Delete setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Amenities collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code BjorneparkappenApi bjorneparkappen_api = new BjorneparkappenApi(...);}
     *   {@code BjorneparkappenApi.Amenities.List request = bjorneparkappen_api.amenities().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Amenities amenities() {
      return new Amenities();
    }

    /**
     * The "amenities" collection of methods.
     */
    public class Amenities {

      /**
       * Create a request for the method "amenities.all".
       *
       * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
       * optional parameters, call the {@link All#execute()} method to invoke the remote operation.
       *
       * @param languageCode
       * @return the request
       */
      public All all(java.lang.String languageCode) throws java.io.IOException {
        All result = new All(languageCode);
        initialize(result);
        return result;
      }

      public class All extends BjorneparkappenApiRequest<none.bjorneparkappen_api.model.MainAreaListResponse> {

        private static final String REST_PATH = "areas/amenities/all";

        /**
         * Create a request for the method "amenities.all".
         *
         * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
         * any optional parameters, call the {@link All#execute()} method to invoke the remote operation.
         * <p> {@link
         * All#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param languageCode
         * @since 1.13
         */
        protected All(java.lang.String languageCode) {
          super(BjorneparkappenApi.this, "GET", REST_PATH, null, none.bjorneparkappen_api.model.MainAreaListResponse.class);
          this.languageCode = com.google.api.client.util.Preconditions.checkNotNull(languageCode, "Required parameter languageCode must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public All setAlt(java.lang.String alt) {
          return (All) super.setAlt(alt);
        }

        @Override
        public All setFields(java.lang.String fields) {
          return (All) super.setFields(fields);
        }

        @Override
        public All setKey(java.lang.String key) {
          return (All) super.setKey(key);
        }

        @Override
        public All setOauthToken(java.lang.String oauthToken) {
          return (All) super.setOauthToken(oauthToken);
        }

        @Override
        public All setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (All) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public All setQuotaUser(java.lang.String quotaUser) {
          return (All) super.setQuotaUser(quotaUser);
        }

        @Override
        public All setUserIp(java.lang.String userIp) {
          return (All) super.setUserIp(userIp);
        }

        @com.google.api.client.util.Key("language_code")
        private java.lang.String languageCode;

        /**

         */
        public java.lang.String getLanguageCode() {
          return languageCode;
        }

        public All setLanguageCode(java.lang.String languageCode) {
          this.languageCode = languageCode;
          return this;
        }

        @Override
        public All set(String parameterName, Object value) {
          return (All) super.set(parameterName, value);
        }
      }
      /**
       * Create a request for the method "amenities.create".
       *
       * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param content the {@link none.bjorneparkappen_api.model.MainAmenityRequest}
       * @return the request
       */
      public Create create(none.bjorneparkappen_api.model.MainAmenityRequest content) throws java.io.IOException {
        Create result = new Create(content);
        initialize(result);
        return result;
      }

      public class Create extends BjorneparkappenApiRequest<Void> {

        private static final String REST_PATH = "areas/amenities/create";

        /**
         * Create a request for the method "amenities.create".
         *
         * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
         * any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param content the {@link none.bjorneparkappen_api.model.MainAmenityRequest}
         * @since 1.13
         */
        protected Create(none.bjorneparkappen_api.model.MainAmenityRequest content) {
          super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUserIp(java.lang.String userIp) {
          return (Create) super.setUserIp(userIp);
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Create a request for the method "amenities.update".
       *
       * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
       * @return the request
       */
      public Update update(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) throws java.io.IOException {
        Update result = new Update(content);
        initialize(result);
        return result;
      }

      public class Update extends BjorneparkappenApiRequest<Void> {

        private static final String REST_PATH = "areas/amenities/update";

        /**
         * Create a request for the method "amenities.update".
         *
         * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
         * any optional parameters, call the {@link Update#execute()} method to invoke the remote
         * operation. <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
         * @since 1.13
         */
        protected Update(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) {
          super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUserIp(java.lang.String userIp) {
          return (Update) super.setUserIp(userIp);
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Enclosures collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code BjorneparkappenApi bjorneparkappen_api = new BjorneparkappenApi(...);}
     *   {@code BjorneparkappenApi.Enclosures.List request = bjorneparkappen_api.enclosures().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Enclosures enclosures() {
      return new Enclosures();
    }

    /**
     * The "enclosures" collection of methods.
     */
    public class Enclosures {

      /**
       * Create a request for the method "enclosures.all".
       *
       * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
       * optional parameters, call the {@link All#execute()} method to invoke the remote operation.
       *
       * @param languageCode
       * @return the request
       */
      public All all(java.lang.String languageCode) throws java.io.IOException {
        All result = new All(languageCode);
        initialize(result);
        return result;
      }

      public class All extends BjorneparkappenApiRequest<none.bjorneparkappen_api.model.MainAreaListResponse> {

        private static final String REST_PATH = "areas/enclosures/all";

        /**
         * Create a request for the method "enclosures.all".
         *
         * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
         * any optional parameters, call the {@link All#execute()} method to invoke the remote operation.
         * <p> {@link
         * All#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param languageCode
         * @since 1.13
         */
        protected All(java.lang.String languageCode) {
          super(BjorneparkappenApi.this, "GET", REST_PATH, null, none.bjorneparkappen_api.model.MainAreaListResponse.class);
          this.languageCode = com.google.api.client.util.Preconditions.checkNotNull(languageCode, "Required parameter languageCode must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public All setAlt(java.lang.String alt) {
          return (All) super.setAlt(alt);
        }

        @Override
        public All setFields(java.lang.String fields) {
          return (All) super.setFields(fields);
        }

        @Override
        public All setKey(java.lang.String key) {
          return (All) super.setKey(key);
        }

        @Override
        public All setOauthToken(java.lang.String oauthToken) {
          return (All) super.setOauthToken(oauthToken);
        }

        @Override
        public All setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (All) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public All setQuotaUser(java.lang.String quotaUser) {
          return (All) super.setQuotaUser(quotaUser);
        }

        @Override
        public All setUserIp(java.lang.String userIp) {
          return (All) super.setUserIp(userIp);
        }

        @com.google.api.client.util.Key("language_code")
        private java.lang.String languageCode;

        /**

         */
        public java.lang.String getLanguageCode() {
          return languageCode;
        }

        public All setLanguageCode(java.lang.String languageCode) {
          this.languageCode = languageCode;
          return this;
        }

        @Override
        public All set(String parameterName, Object value) {
          return (All) super.set(parameterName, value);
        }
      }
      /**
       * Create a request for the method "enclosures.create".
       *
       * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param content the {@link none.bjorneparkappen_api.model.MainEnclosureRequest}
       * @return the request
       */
      public Create create(none.bjorneparkappen_api.model.MainEnclosureRequest content) throws java.io.IOException {
        Create result = new Create(content);
        initialize(result);
        return result;
      }

      public class Create extends BjorneparkappenApiRequest<Void> {

        private static final String REST_PATH = "areas/enclosures/create";

        /**
         * Create a request for the method "enclosures.create".
         *
         * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
         * any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param content the {@link none.bjorneparkappen_api.model.MainEnclosureRequest}
         * @since 1.13
         */
        protected Create(none.bjorneparkappen_api.model.MainEnclosureRequest content) {
          super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUserIp(java.lang.String userIp) {
          return (Create) super.setUserIp(userIp);
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Create a request for the method "enclosures.update".
       *
       * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
       * @return the request
       */
      public Update update(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) throws java.io.IOException {
        Update result = new Update(content);
        initialize(result);
        return result;
      }

      public class Update extends BjorneparkappenApiRequest<Void> {

        private static final String REST_PATH = "areas/enclosures/update";

        /**
         * Create a request for the method "enclosures.update".
         *
         * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
         * any optional parameters, call the {@link Update#execute()} method to invoke the remote
         * operation. <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
         * @since 1.13
         */
        protected Update(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) {
          super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUserIp(java.lang.String userIp) {
          return (Update) super.setUserIp(userIp);
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Update collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BjorneparkappenApi bjorneparkappen_api = new BjorneparkappenApi(...);}
       *   {@code BjorneparkappenApi.Update.List request = bjorneparkappen_api.update().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Update update() {
        return new Update(null);
      }

      /**
       * The "update" collection of methods.
       */
      public class Updater {

        /**
         * An accessor for creating requests from the Animals collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code BjorneparkappenApi bjorneparkappen_api = new BjorneparkappenApi(...);}
         *   {@code BjorneparkappenApi.Animals.List request = bjorneparkappen_api.animals().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Animals animals() {
          return new Animals();
        }

        /**
         * The "animals" collection of methods.
         */
        public class Animals {

          /**
           * Create a request for the method "animals.add".
           *
           * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
           * optional parameters, call the {@link Add#execute()} method to invoke the remote operation.
           *
           * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
           * @return the request
           */
          public Add add(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) throws java.io.IOException {
            Add result = new Add(content);
            initialize(result);
            return result;
          }

          public class Add extends BjorneparkappenApiRequest<Void> {

            private static final String REST_PATH = "areas/enclosures/update/animals/add";

            /**
             * Create a request for the method "animals.add".
             *
             * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
             * any optional parameters, call the {@link Add#execute()} method to invoke the remote operation.
             * <p> {@link
             * Add#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
             * @since 1.13
             */
            protected Add(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) {
              super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
            }

            @Override
            public Add setAlt(java.lang.String alt) {
              return (Add) super.setAlt(alt);
            }

            @Override
            public Add setFields(java.lang.String fields) {
              return (Add) super.setFields(fields);
            }

            @Override
            public Add setKey(java.lang.String key) {
              return (Add) super.setKey(key);
            }

            @Override
            public Add setOauthToken(java.lang.String oauthToken) {
              return (Add) super.setOauthToken(oauthToken);
            }

            @Override
            public Add setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Add) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Add setQuotaUser(java.lang.String quotaUser) {
              return (Add) super.setQuotaUser(quotaUser);
            }

            @Override
            public Add setUserIp(java.lang.String userIp) {
              return (Add) super.setUserIp(userIp);
            }

            @Override
            public Add set(String parameterName, Object value) {
              return (Add) super.set(parameterName, value);
            }
          }

        }
      }
    }
  }

  /**
   * An accessor for creating requests from the Events collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code BjorneparkappenApi bjorneparkappen_api = new BjorneparkappenApi(...);}
   *   {@code BjorneparkappenApi.Events.List request = bjorneparkappen_api.events().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Events events() {
    return new Events();
  }

  /**
   * The "events" collection of methods.
   */
  public class Events {

    /**
     * Create a request for the method "events.all".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link All#execute()} method to invoke the remote operation.
     *
     * @param languageCode
     * @return the request
     */
    public All all(java.lang.String languageCode) throws java.io.IOException {
      All result = new All(languageCode);
      initialize(result);
      return result;
    }

    public class All extends BjorneparkappenApiRequest<none.bjorneparkappen_api.model.MainEventListResponse> {

      private static final String REST_PATH = "events/all";

      /**
       * Create a request for the method "events.all".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link All#execute()} method to invoke the remote operation.
       * <p> {@link
       * All#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param languageCode
       * @since 1.13
       */
      protected All(java.lang.String languageCode) {
        super(BjorneparkappenApi.this, "GET", REST_PATH, null, none.bjorneparkappen_api.model.MainEventListResponse.class);
        this.languageCode = com.google.api.client.util.Preconditions.checkNotNull(languageCode, "Required parameter languageCode must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public All setAlt(java.lang.String alt) {
        return (All) super.setAlt(alt);
      }

      @Override
      public All setFields(java.lang.String fields) {
        return (All) super.setFields(fields);
      }

      @Override
      public All setKey(java.lang.String key) {
        return (All) super.setKey(key);
      }

      @Override
      public All setOauthToken(java.lang.String oauthToken) {
        return (All) super.setOauthToken(oauthToken);
      }

      @Override
      public All setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (All) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public All setQuotaUser(java.lang.String quotaUser) {
        return (All) super.setQuotaUser(quotaUser);
      }

      @Override
      public All setUserIp(java.lang.String userIp) {
        return (All) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("language_code")
      private java.lang.String languageCode;

      /**

       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      public All setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      @Override
      public All set(String parameterName, Object value) {
        return (All) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "events.amenity".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link Amenity#execute()} method to invoke the remote operation.
     *
     * @param id
     * @param languageCode
     * @return the request
     */
    public Amenity amenity(java.lang.Long id, java.lang.String languageCode) throws java.io.IOException {
      Amenity result = new Amenity(id, languageCode);
      initialize(result);
      return result;
    }

    public class Amenity extends BjorneparkappenApiRequest<none.bjorneparkappen_api.model.MainEventListResponse> {

      private static final String REST_PATH = "events/amenity";

      /**
       * Create a request for the method "events.amenity".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link Amenity#execute()} method to invoke the remote
       * operation. <p> {@link
       * Amenity#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @param languageCode
       * @since 1.13
       */
      protected Amenity(java.lang.Long id, java.lang.String languageCode) {
        super(BjorneparkappenApi.this, "GET", REST_PATH, null, none.bjorneparkappen_api.model.MainEventListResponse.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
        this.languageCode = com.google.api.client.util.Preconditions.checkNotNull(languageCode, "Required parameter languageCode must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Amenity setAlt(java.lang.String alt) {
        return (Amenity) super.setAlt(alt);
      }

      @Override
      public Amenity setFields(java.lang.String fields) {
        return (Amenity) super.setFields(fields);
      }

      @Override
      public Amenity setKey(java.lang.String key) {
        return (Amenity) super.setKey(key);
      }

      @Override
      public Amenity setOauthToken(java.lang.String oauthToken) {
        return (Amenity) super.setOauthToken(oauthToken);
      }

      @Override
      public Amenity setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Amenity) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Amenity setQuotaUser(java.lang.String quotaUser) {
        return (Amenity) super.setQuotaUser(quotaUser);
      }

      @Override
      public Amenity setUserIp(java.lang.String userIp) {
        return (Amenity) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public Amenity setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @com.google.api.client.util.Key("language_code")
      private java.lang.String languageCode;

      /**

       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      public Amenity setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      @Override
      public Amenity set(String parameterName, Object value) {
        return (Amenity) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "events.create".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link none.bjorneparkappen_api.model.MainEventRequest}
     * @return the request
     */
    public Create create(none.bjorneparkappen_api.model.MainEventRequest content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends BjorneparkappenApiRequest<Void> {

      private static final String REST_PATH = "events/create";

      /**
       * Create a request for the method "events.create".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link Create#execute()} method to invoke the remote
       * operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link none.bjorneparkappen_api.model.MainEventRequest}
       * @since 1.13
       */
      protected Create(none.bjorneparkappen_api.model.MainEventRequest content) {
        super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUserIp(java.lang.String userIp) {
        return (Create) super.setUserIp(userIp);
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "events.delete".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param eventId
     * @param locationId
     * @return the request
     */
    public Delete delete(java.lang.Long eventId, java.lang.Long locationId) throws java.io.IOException {
      Delete result = new Delete(eventId, locationId);
      initialize(result);
      return result;
    }

    public class Delete extends BjorneparkappenApiRequest<Void> {

      private static final String REST_PATH = "events/delete";

      /**
       * Create a request for the method "events.delete".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
       * operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param eventId
       * @param locationId
       * @since 1.13
       */
      protected Delete(java.lang.Long eventId, java.lang.Long locationId) {
        super(BjorneparkappenApi.this, "DELETE", REST_PATH, null, Void.class);
        this.eventId = com.google.api.client.util.Preconditions.checkNotNull(eventId, "Required parameter eventId must be specified.");
        this.locationId = com.google.api.client.util.Preconditions.checkNotNull(locationId, "Required parameter locationId must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("event_id")
      private java.lang.Long eventId;

      /**

       */
      public java.lang.Long getEventId() {
        return eventId;
      }

      public Delete setEventId(java.lang.Long eventId) {
        this.eventId = eventId;
        return this;
      }

      @com.google.api.client.util.Key("location_id")
      private java.lang.Long locationId;

      /**

       */
      public java.lang.Long getLocationId() {
        return locationId;
      }

      public Delete setLocationId(java.lang.Long locationId) {
        this.locationId = locationId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "events.events".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link EventsRequest#execute()} method to invoke the remote
     * operation.
     *
     * @param languageCode
     * @return the request
     */
    public EventsRequest events(java.lang.String languageCode) throws java.io.IOException {
      EventsRequest result = new EventsRequest(languageCode);
      initialize(result);
      return result;
    }

    public class EventsRequest extends BjorneparkappenApiRequest<none.bjorneparkappen_api.model.MainEventListResponse> {

      private static final String REST_PATH = "events/events";

      /**
       * Create a request for the method "events.events".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link EventsRequest#execute()} method to invoke the remote
       * operation. <p> {@link EventsRequest#initialize(com.google.api.client.googleapis.services.Abstra
       * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param languageCode
       * @since 1.13
       */
      protected EventsRequest(java.lang.String languageCode) {
        super(BjorneparkappenApi.this, "GET", REST_PATH, null, none.bjorneparkappen_api.model.MainEventListResponse.class);
        this.languageCode = com.google.api.client.util.Preconditions.checkNotNull(languageCode, "Required parameter languageCode must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public EventsRequest setAlt(java.lang.String alt) {
        return (EventsRequest) super.setAlt(alt);
      }

      @Override
      public EventsRequest setFields(java.lang.String fields) {
        return (EventsRequest) super.setFields(fields);
      }

      @Override
      public EventsRequest setKey(java.lang.String key) {
        return (EventsRequest) super.setKey(key);
      }

      @Override
      public EventsRequest setOauthToken(java.lang.String oauthToken) {
        return (EventsRequest) super.setOauthToken(oauthToken);
      }

      @Override
      public EventsRequest setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (EventsRequest) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public EventsRequest setQuotaUser(java.lang.String quotaUser) {
        return (EventsRequest) super.setQuotaUser(quotaUser);
      }

      @Override
      public EventsRequest setUserIp(java.lang.String userIp) {
        return (EventsRequest) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("language_code")
      private java.lang.String languageCode;

      /**

       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      public EventsRequest setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      @Override
      public EventsRequest set(String parameterName, Object value) {
        return (EventsRequest) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "events.update".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
     * @return the request
     */
    public Update update(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) throws java.io.IOException {
      Update result = new Update(content);
      initialize(result);
      return result;
    }

    public class Update extends BjorneparkappenApiRequest<Void> {

      private static final String REST_PATH = "events/update";

      /**
       * Create a request for the method "events.update".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link Update#execute()} method to invoke the remote
       * operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
       * @since 1.13
       */
      protected Update(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) {
        super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Feedings collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code BjorneparkappenApi bjorneparkappen_api = new BjorneparkappenApi(...);}
     *   {@code BjorneparkappenApi.Feedings.List request = bjorneparkappen_api.feedings().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Feedings feedings() {
      return new Feedings();
    }

    /**
     * The "feedings" collection of methods.
     */
    public class Feedings {

      /**
       * Create a request for the method "feedings.all".
       *
       * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
       * optional parameters, call the {@link All#execute()} method to invoke the remote operation.
       *
       * @param languageCode
       * @return the request
       */
      public All all(java.lang.String languageCode) throws java.io.IOException {
        All result = new All(languageCode);
        initialize(result);
        return result;
      }

      public class All extends BjorneparkappenApiRequest<none.bjorneparkappen_api.model.MainEventListResponse> {

        private static final String REST_PATH = "events/feedings/all";

        /**
         * Create a request for the method "feedings.all".
         *
         * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
         * any optional parameters, call the {@link All#execute()} method to invoke the remote operation.
         * <p> {@link
         * All#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param languageCode
         * @since 1.13
         */
        protected All(java.lang.String languageCode) {
          super(BjorneparkappenApi.this, "GET", REST_PATH, null, none.bjorneparkappen_api.model.MainEventListResponse.class);
          this.languageCode = com.google.api.client.util.Preconditions.checkNotNull(languageCode, "Required parameter languageCode must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public All setAlt(java.lang.String alt) {
          return (All) super.setAlt(alt);
        }

        @Override
        public All setFields(java.lang.String fields) {
          return (All) super.setFields(fields);
        }

        @Override
        public All setKey(java.lang.String key) {
          return (All) super.setKey(key);
        }

        @Override
        public All setOauthToken(java.lang.String oauthToken) {
          return (All) super.setOauthToken(oauthToken);
        }

        @Override
        public All setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (All) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public All setQuotaUser(java.lang.String quotaUser) {
          return (All) super.setQuotaUser(quotaUser);
        }

        @Override
        public All setUserIp(java.lang.String userIp) {
          return (All) super.setUserIp(userIp);
        }

        @com.google.api.client.util.Key("language_code")
        private java.lang.String languageCode;

        /**

         */
        public java.lang.String getLanguageCode() {
          return languageCode;
        }

        public All setLanguageCode(java.lang.String languageCode) {
          this.languageCode = languageCode;
          return this;
        }

        @Override
        public All set(String parameterName, Object value) {
          return (All) super.set(parameterName, value);
        }
      }
      /**
       * Create a request for the method "feedings.create".
       *
       * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param content the {@link none.bjorneparkappen_api.model.MainFeedingRequest}
       * @return the request
       */
      public Create create(none.bjorneparkappen_api.model.MainFeedingRequest content) throws java.io.IOException {
        Create result = new Create(content);
        initialize(result);
        return result;
      }

      public class Create extends BjorneparkappenApiRequest<Void> {

        private static final String REST_PATH = "events/feedings/create";

        /**
         * Create a request for the method "feedings.create".
         *
         * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
         * any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param content the {@link none.bjorneparkappen_api.model.MainFeedingRequest}
         * @since 1.13
         */
        protected Create(none.bjorneparkappen_api.model.MainFeedingRequest content) {
          super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUserIp(java.lang.String userIp) {
          return (Create) super.setUserIp(userIp);
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Create a request for the method "feedings.species".
       *
       * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
       * optional parameters, call the {@link Species#execute()} method to invoke the remote operation.
       *
       * @param id
       * @param languageCode
       * @return the request
       */
      public Species species(java.lang.Long id, java.lang.String languageCode) throws java.io.IOException {
        Species result = new Species(id, languageCode);
        initialize(result);
        return result;
      }

      public class Species extends BjorneparkappenApiRequest<none.bjorneparkappen_api.model.MainEventListResponse> {

        private static final String REST_PATH = "events/feedings/species";

        /**
         * Create a request for the method "feedings.species".
         *
         * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
         * any optional parameters, call the {@link Species#execute()} method to invoke the remote
         * operation. <p> {@link
         * Species#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param id
         * @param languageCode
         * @since 1.13
         */
        protected Species(java.lang.Long id, java.lang.String languageCode) {
          super(BjorneparkappenApi.this, "GET", REST_PATH, null, none.bjorneparkappen_api.model.MainEventListResponse.class);
          this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
          this.languageCode = com.google.api.client.util.Preconditions.checkNotNull(languageCode, "Required parameter languageCode must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Species setAlt(java.lang.String alt) {
          return (Species) super.setAlt(alt);
        }

        @Override
        public Species setFields(java.lang.String fields) {
          return (Species) super.setFields(fields);
        }

        @Override
        public Species setKey(java.lang.String key) {
          return (Species) super.setKey(key);
        }

        @Override
        public Species setOauthToken(java.lang.String oauthToken) {
          return (Species) super.setOauthToken(oauthToken);
        }

        @Override
        public Species setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Species) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Species setQuotaUser(java.lang.String quotaUser) {
          return (Species) super.setQuotaUser(quotaUser);
        }

        @Override
        public Species setUserIp(java.lang.String userIp) {
          return (Species) super.setUserIp(userIp);
        }

        @com.google.api.client.util.Key
        private java.lang.Long id;

        /**

         */
        public java.lang.Long getId() {
          return id;
        }

        public Species setId(java.lang.Long id) {
          this.id = id;
          return this;
        }

        @com.google.api.client.util.Key("language_code")
        private java.lang.String languageCode;

        /**

         */
        public java.lang.String getLanguageCode() {
          return languageCode;
        }

        public Species setLanguageCode(java.lang.String languageCode) {
          this.languageCode = languageCode;
          return this;
        }

        @Override
        public Species set(String parameterName, Object value) {
          return (Species) super.set(parameterName, value);
        }
      }
      /**
       * Create a request for the method "feedings.update".
       *
       * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
       * @return the request
       */
      public Update update(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) throws java.io.IOException {
        Update result = new Update(content);
        initialize(result);
        return result;
      }

      public class Update extends BjorneparkappenApiRequest<Void> {

        private static final String REST_PATH = "events/feedings/update";

        /**
         * Create a request for the method "feedings.update".
         *
         * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
         * any optional parameters, call the {@link Update#execute()} method to invoke the remote
         * operation. <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
         * @since 1.13
         */
        protected Update(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) {
          super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUserIp(java.lang.String userIp) {
          return (Update) super.setUserIp(userIp);
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Keepers collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code BjorneparkappenApi bjorneparkappen_api = new BjorneparkappenApi(...);}
   *   {@code BjorneparkappenApi.Keepers.List request = bjorneparkappen_api.keepers().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Keepers keepers() {
    return new Keepers();
  }

  /**
   * The "keepers" collection of methods.
   */
  public class Keepers {

    /**
     * Create a request for the method "keepers.all".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link All#execute()} method to invoke the remote operation.
     *
     * @param languageCode
     * @return the request
     */
    public All all(java.lang.String languageCode) throws java.io.IOException {
      All result = new All(languageCode);
      initialize(result);
      return result;
    }

    public class All extends BjorneparkappenApiRequest<none.bjorneparkappen_api.model.MainKeeperListResponse> {

      private static final String REST_PATH = "keepers/all";

      /**
       * Create a request for the method "keepers.all".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link All#execute()} method to invoke the remote operation.
       * <p> {@link
       * All#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param languageCode
       * @since 1.13
       */
      protected All(java.lang.String languageCode) {
        super(BjorneparkappenApi.this, "GET", REST_PATH, null, none.bjorneparkappen_api.model.MainKeeperListResponse.class);
        this.languageCode = com.google.api.client.util.Preconditions.checkNotNull(languageCode, "Required parameter languageCode must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public All setAlt(java.lang.String alt) {
        return (All) super.setAlt(alt);
      }

      @Override
      public All setFields(java.lang.String fields) {
        return (All) super.setFields(fields);
      }

      @Override
      public All setKey(java.lang.String key) {
        return (All) super.setKey(key);
      }

      @Override
      public All setOauthToken(java.lang.String oauthToken) {
        return (All) super.setOauthToken(oauthToken);
      }

      @Override
      public All setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (All) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public All setQuotaUser(java.lang.String quotaUser) {
        return (All) super.setQuotaUser(quotaUser);
      }

      @Override
      public All setUserIp(java.lang.String userIp) {
        return (All) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("language_code")
      private java.lang.String languageCode;

      /**

       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      public All setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      @Override
      public All set(String parameterName, Object value) {
        return (All) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "keepers.create".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link none.bjorneparkappen_api.model.MainKeeperRequest}
     * @return the request
     */
    public Create create(none.bjorneparkappen_api.model.MainKeeperRequest content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends BjorneparkappenApiRequest<Void> {

      private static final String REST_PATH = "keepers/create";

      /**
       * Create a request for the method "keepers.create".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link Create#execute()} method to invoke the remote
       * operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link none.bjorneparkappen_api.model.MainKeeperRequest}
       * @since 1.13
       */
      protected Create(none.bjorneparkappen_api.model.MainKeeperRequest content) {
        super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUserIp(java.lang.String userIp) {
        return (Create) super.setUserIp(userIp);
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "keepers.delete".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public Delete delete(java.lang.Long id) throws java.io.IOException {
      Delete result = new Delete(id);
      initialize(result);
      return result;
    }

    public class Delete extends BjorneparkappenApiRequest<Void> {

      private static final String REST_PATH = "keepers/delete";

      /**
       * Create a request for the method "keepers.delete".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
       * operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected Delete(java.lang.Long id) {
        super(BjorneparkappenApi.this, "DELETE", REST_PATH, null, Void.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public Delete setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "keepers.update".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
     * @return the request
     */
    public Update update(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) throws java.io.IOException {
      Update result = new Update(content);
      initialize(result);
      return result;
    }

    public class Update extends BjorneparkappenApiRequest<Void> {

      private static final String REST_PATH = "keepers/update";

      /**
       * Create a request for the method "keepers.update".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link Update#execute()} method to invoke the remote
       * operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
       * @since 1.13
       */
      protected Update(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) {
        super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Species collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code BjorneparkappenApi bjorneparkappen_api = new BjorneparkappenApi(...);}
   *   {@code BjorneparkappenApi.Species.List request = bjorneparkappen_api.species().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Species species() {
    return new Species();
  }

  /**
   * The "species" collection of methods.
   */
  public class Species {

    /**
     * Create a request for the method "species.all".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link All#execute()} method to invoke the remote operation.
     *
     * @param languageCode
     * @return the request
     */
    public All all(java.lang.String languageCode) throws java.io.IOException {
      All result = new All(languageCode);
      initialize(result);
      return result;
    }

    public class All extends BjorneparkappenApiRequest<none.bjorneparkappen_api.model.MainSpeciesListResponse> {

      private static final String REST_PATH = "species/all";

      /**
       * Create a request for the method "species.all".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link All#execute()} method to invoke the remote operation.
       * <p> {@link
       * All#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param languageCode
       * @since 1.13
       */
      protected All(java.lang.String languageCode) {
        super(BjorneparkappenApi.this, "GET", REST_PATH, null, none.bjorneparkappen_api.model.MainSpeciesListResponse.class);
        this.languageCode = com.google.api.client.util.Preconditions.checkNotNull(languageCode, "Required parameter languageCode must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public All setAlt(java.lang.String alt) {
        return (All) super.setAlt(alt);
      }

      @Override
      public All setFields(java.lang.String fields) {
        return (All) super.setFields(fields);
      }

      @Override
      public All setKey(java.lang.String key) {
        return (All) super.setKey(key);
      }

      @Override
      public All setOauthToken(java.lang.String oauthToken) {
        return (All) super.setOauthToken(oauthToken);
      }

      @Override
      public All setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (All) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public All setQuotaUser(java.lang.String quotaUser) {
        return (All) super.setQuotaUser(quotaUser);
      }

      @Override
      public All setUserIp(java.lang.String userIp) {
        return (All) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("language_code")
      private java.lang.String languageCode;

      /**

       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      public All setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      @Override
      public All set(String parameterName, Object value) {
        return (All) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "species.create".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link none.bjorneparkappen_api.model.MainSpeciesRequest}
     * @return the request
     */
    public Create create(none.bjorneparkappen_api.model.MainSpeciesRequest content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends BjorneparkappenApiRequest<Void> {

      private static final String REST_PATH = "species/create";

      /**
       * Create a request for the method "species.create".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link Create#execute()} method to invoke the remote
       * operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link none.bjorneparkappen_api.model.MainSpeciesRequest}
       * @since 1.13
       */
      protected Create(none.bjorneparkappen_api.model.MainSpeciesRequest content) {
        super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUserIp(java.lang.String userIp) {
        return (Create) super.setUserIp(userIp);
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "species.delete".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public Delete delete(java.lang.Long id) throws java.io.IOException {
      Delete result = new Delete(id);
      initialize(result);
      return result;
    }

    public class Delete extends BjorneparkappenApiRequest<Void> {

      private static final String REST_PATH = "species/delete";

      /**
       * Create a request for the method "species.delete".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
       * operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected Delete(java.lang.Long id) {
        super(BjorneparkappenApi.this, "DELETE", REST_PATH, null, Void.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public Delete setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "species.update".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
     * @return the request
     */
    public Update update(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) throws java.io.IOException {
      Update result = new Update(content);
      initialize(result);
      return result;
    }

    public class Update extends BjorneparkappenApiRequest<Void> {

      private static final String REST_PATH = "species/update";

      /**
       * Create a request for the method "species.update".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link Update#execute()} method to invoke the remote
       * operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
       * @since 1.13
       */
      protected Update(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) {
        super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Version collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code BjorneparkappenApi bjorneparkappen_api = new BjorneparkappenApi(...);}
   *   {@code BjorneparkappenApi.Version.List request = bjorneparkappen_api.version().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Version version() {
    return new Version();
  }

  /**
   * The "version" collection of methods.
   */
  public class Version {

    /**
     * Create a request for the method "version.get".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Get get() throws java.io.IOException {
      Get result = new Get();
      initialize(result);
      return result;
    }

    public class Get extends BjorneparkappenApiRequest<none.bjorneparkappen_api.model.MainVersionResponse> {

      private static final String REST_PATH = "version";

      /**
       * Create a request for the method "version.get".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       * <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Get() {
        super(BjorneparkappenApi.this, "GET", REST_PATH, null, none.bjorneparkappen_api.model.MainVersionResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Visitors collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code BjorneparkappenApi bjorneparkappen_api = new BjorneparkappenApi(...);}
   *   {@code BjorneparkappenApi.Visitors.List request = bjorneparkappen_api.visitors().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Visitors visitors() {
    return new Visitors();
  }

  /**
   * The "visitors" collection of methods.
   */
  public class Visitors {

    /**
     * Create a request for the method "visitors.create".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link none.bjorneparkappen_api.model.MainVisitorRequest}
     * @return the request
     */
    public Create create(none.bjorneparkappen_api.model.MainVisitorRequest content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends BjorneparkappenApiRequest<none.bjorneparkappen_api.model.MainVisitorResponse> {

      private static final String REST_PATH = "visitors/create";

      /**
       * Create a request for the method "visitors.create".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link Create#execute()} method to invoke the remote
       * operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link none.bjorneparkappen_api.model.MainVisitorRequest}
       * @since 1.13
       */
      protected Create(none.bjorneparkappen_api.model.MainVisitorRequest content) {
        super(BjorneparkappenApi.this, "POST", REST_PATH, content, none.bjorneparkappen_api.model.MainVisitorResponse.class);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUserIp(java.lang.String userIp) {
        return (Create) super.setUserIp(userIp);
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "visitors.itinerary".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link Itinerary#execute()} method to invoke the remote operation.
     *
     * @param id
     * @param languageCode
     * @return the request
     */
    public Itinerary itinerary(java.lang.Long id, java.lang.String languageCode) throws java.io.IOException {
      Itinerary result = new Itinerary(id, languageCode);
      initialize(result);
      return result;
    }

    public class Itinerary extends BjorneparkappenApiRequest<none.bjorneparkappen_api.model.MainEventListResponse> {

      private static final String REST_PATH = "visitors/itinerary";

      /**
       * Create a request for the method "visitors.itinerary".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link Itinerary#execute()} method to invoke the remote
       * operation. <p> {@link
       * Itinerary#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @param languageCode
       * @since 1.13
       */
      protected Itinerary(java.lang.Long id, java.lang.String languageCode) {
        super(BjorneparkappenApi.this, "GET", REST_PATH, null, none.bjorneparkappen_api.model.MainEventListResponse.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
        this.languageCode = com.google.api.client.util.Preconditions.checkNotNull(languageCode, "Required parameter languageCode must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Itinerary setAlt(java.lang.String alt) {
        return (Itinerary) super.setAlt(alt);
      }

      @Override
      public Itinerary setFields(java.lang.String fields) {
        return (Itinerary) super.setFields(fields);
      }

      @Override
      public Itinerary setKey(java.lang.String key) {
        return (Itinerary) super.setKey(key);
      }

      @Override
      public Itinerary setOauthToken(java.lang.String oauthToken) {
        return (Itinerary) super.setOauthToken(oauthToken);
      }

      @Override
      public Itinerary setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Itinerary) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Itinerary setQuotaUser(java.lang.String quotaUser) {
        return (Itinerary) super.setQuotaUser(quotaUser);
      }

      @Override
      public Itinerary setUserIp(java.lang.String userIp) {
        return (Itinerary) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public Itinerary setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @com.google.api.client.util.Key("language_code")
      private java.lang.String languageCode;

      /**

       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      public Itinerary setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      @Override
      public Itinerary set(String parameterName, Object value) {
        return (Itinerary) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "visitors.starred_species".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link StarredSpecies#execute()} method to invoke the remote
     * operation.
     *
     * @param id
     * @param languageCode
     * @return the request
     */
    public StarredSpecies starredSpecies(java.lang.Long id, java.lang.String languageCode) throws java.io.IOException {
      StarredSpecies result = new StarredSpecies(id, languageCode);
      initialize(result);
      return result;
    }

    public class StarredSpecies extends BjorneparkappenApiRequest<none.bjorneparkappen_api.model.MainSpeciesListResponse> {

      private static final String REST_PATH = "visitors/starred_species";

      /**
       * Create a request for the method "visitors.starred_species".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link StarredSpecies#execute()} method to invoke the remote
       * operation. <p> {@link StarredSpecies#initialize(com.google.api.client.googleapis.services.Abstr
       * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param id
       * @param languageCode
       * @since 1.13
       */
      protected StarredSpecies(java.lang.Long id, java.lang.String languageCode) {
        super(BjorneparkappenApi.this, "GET", REST_PATH, null, none.bjorneparkappen_api.model.MainSpeciesListResponse.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
        this.languageCode = com.google.api.client.util.Preconditions.checkNotNull(languageCode, "Required parameter languageCode must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public StarredSpecies setAlt(java.lang.String alt) {
        return (StarredSpecies) super.setAlt(alt);
      }

      @Override
      public StarredSpecies setFields(java.lang.String fields) {
        return (StarredSpecies) super.setFields(fields);
      }

      @Override
      public StarredSpecies setKey(java.lang.String key) {
        return (StarredSpecies) super.setKey(key);
      }

      @Override
      public StarredSpecies setOauthToken(java.lang.String oauthToken) {
        return (StarredSpecies) super.setOauthToken(oauthToken);
      }

      @Override
      public StarredSpecies setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (StarredSpecies) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public StarredSpecies setQuotaUser(java.lang.String quotaUser) {
        return (StarredSpecies) super.setQuotaUser(quotaUser);
      }

      @Override
      public StarredSpecies setUserIp(java.lang.String userIp) {
        return (StarredSpecies) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public StarredSpecies setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @com.google.api.client.util.Key("language_code")
      private java.lang.String languageCode;

      /**

       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      public StarredSpecies setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      @Override
      public StarredSpecies set(String parameterName, Object value) {
        return (StarredSpecies) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "visitors.update".
     *
     * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
     * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
     * @return the request
     */
    public Update update(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) throws java.io.IOException {
      Update result = new Update(content);
      initialize(result);
      return result;
    }

    public class Update extends BjorneparkappenApiRequest<Void> {

      private static final String REST_PATH = "visitors/update";

      /**
       * Create a request for the method "visitors.update".
       *
       * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
       * any optional parameters, call the {@link Update#execute()} method to invoke the remote
       * operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
       * @since 1.13
       */
      protected Update(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) {
        super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Update collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code BjorneparkappenApi bjorneparkappen_api = new BjorneparkappenApi(...);}
     *   {@code BjorneparkappenApi.Update.List request = bjorneparkappen_api.update().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Update update() {
      return new Update(null);
    }

    /**
     * The "update" collection of methods.
     */
    public class Updater {

      /**
       * An accessor for creating requests from the Itinerary collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BjorneparkappenApi bjorneparkappen_api = new BjorneparkappenApi(...);}
       *   {@code BjorneparkappenApi.Itinerary.List request = bjorneparkappen_api.itinerary().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Itinerary itinerary() {
        return new Itinerary();
      }

      /**
       * The "itinerary" collection of methods.
       */
      public class Itinerary {

        /**
         * Create a request for the method "itinerary.add".
         *
         * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
         * optional parameters, call the {@link Add#execute()} method to invoke the remote operation.
         *
         * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
         * @return the request
         */
        public Add add(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) throws java.io.IOException {
          Add result = new Add(content);
          initialize(result);
          return result;
        }

        public class Add extends BjorneparkappenApiRequest<Void> {

          private static final String REST_PATH = "visitors/update/itinerary/add";

          /**
           * Create a request for the method "itinerary.add".
           *
           * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
           * any optional parameters, call the {@link Add#execute()} method to invoke the remote operation.
           * <p> {@link
           * Add#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
           * @since 1.13
           */
          protected Add(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) {
            super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
          }

          @Override
          public Add setAlt(java.lang.String alt) {
            return (Add) super.setAlt(alt);
          }

          @Override
          public Add setFields(java.lang.String fields) {
            return (Add) super.setFields(fields);
          }

          @Override
          public Add setKey(java.lang.String key) {
            return (Add) super.setKey(key);
          }

          @Override
          public Add setOauthToken(java.lang.String oauthToken) {
            return (Add) super.setOauthToken(oauthToken);
          }

          @Override
          public Add setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Add) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Add setQuotaUser(java.lang.String quotaUser) {
            return (Add) super.setQuotaUser(quotaUser);
          }

          @Override
          public Add setUserIp(java.lang.String userIp) {
            return (Add) super.setUserIp(userIp);
          }

          @Override
          public Add set(String parameterName, Object value) {
            return (Add) super.set(parameterName, value);
          }
        }
        /**
         * Create a request for the method "itinerary.remove".
         *
         * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
         * optional parameters, call the {@link Remove#execute()} method to invoke the remote operation.
         *
         * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
         * @return the request
         */
        public Remove remove(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) throws java.io.IOException {
          Remove result = new Remove(content);
          initialize(result);
          return result;
        }

        public class Remove extends BjorneparkappenApiRequest<Void> {

          private static final String REST_PATH = "visitors/update/itinerary/remove";

          /**
           * Create a request for the method "itinerary.remove".
           *
           * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
           * any optional parameters, call the {@link Remove#execute()} method to invoke the remote
           * operation. <p> {@link
           * Remove#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
           * @since 1.13
           */
          protected Remove(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) {
            super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
          }

          @Override
          public Remove setAlt(java.lang.String alt) {
            return (Remove) super.setAlt(alt);
          }

          @Override
          public Remove setFields(java.lang.String fields) {
            return (Remove) super.setFields(fields);
          }

          @Override
          public Remove setKey(java.lang.String key) {
            return (Remove) super.setKey(key);
          }

          @Override
          public Remove setOauthToken(java.lang.String oauthToken) {
            return (Remove) super.setOauthToken(oauthToken);
          }

          @Override
          public Remove setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Remove) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Remove setQuotaUser(java.lang.String quotaUser) {
            return (Remove) super.setQuotaUser(quotaUser);
          }

          @Override
          public Remove setUserIp(java.lang.String userIp) {
            return (Remove) super.setUserIp(userIp);
          }

          @Override
          public Remove set(String parameterName, Object value) {
            return (Remove) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the StarredSpecies collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code BjorneparkappenApi bjorneparkappen_api = new BjorneparkappenApi(...);}
       *   {@code BjorneparkappenApi.StarredSpecies.List request = bjorneparkappen_api.starredSpecies().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public StarredSpecies starredSpecies() {
        return new StarredSpecies();
      }

      /**
       * The "starred_species" collection of methods.
       */
      public class StarredSpecies {

        /**
         * Create a request for the method "starred_species.add".
         *
         * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
         * optional parameters, call the {@link Add#execute()} method to invoke the remote operation.
         *
         * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
         * @return the request
         */
        public Add add(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) throws java.io.IOException {
          Add result = new Add(content);
          initialize(result);
          return result;
        }

        public class Add extends BjorneparkappenApiRequest<Void> {

          private static final String REST_PATH = "visitors/update/starred_species/add";

          /**
           * Create a request for the method "starred_species.add".
           *
           * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
           * any optional parameters, call the {@link Add#execute()} method to invoke the remote operation.
           * <p> {@link
           * Add#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
           * @since 1.13
           */
          protected Add(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) {
            super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
          }

          @Override
          public Add setAlt(java.lang.String alt) {
            return (Add) super.setAlt(alt);
          }

          @Override
          public Add setFields(java.lang.String fields) {
            return (Add) super.setFields(fields);
          }

          @Override
          public Add setKey(java.lang.String key) {
            return (Add) super.setKey(key);
          }

          @Override
          public Add setOauthToken(java.lang.String oauthToken) {
            return (Add) super.setOauthToken(oauthToken);
          }

          @Override
          public Add setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Add) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Add setQuotaUser(java.lang.String quotaUser) {
            return (Add) super.setQuotaUser(quotaUser);
          }

          @Override
          public Add setUserIp(java.lang.String userIp) {
            return (Add) super.setUserIp(userIp);
          }

          @Override
          public Add set(String parameterName, Object value) {
            return (Add) super.set(parameterName, value);
          }
        }
        /**
         * Create a request for the method "starred_species.remove".
         *
         * This request holds the parameters needed by the bjorneparkappen_api server.  After setting any
         * optional parameters, call the {@link Remove#execute()} method to invoke the remote operation.
         *
         * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
         * @return the request
         */
        public Remove remove(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) throws java.io.IOException {
          Remove result = new Remove(content);
          initialize(result);
          return result;
        }

        public class Remove extends BjorneparkappenApiRequest<Void> {

          private static final String REST_PATH = "visitors/update/starred_species/remove";

          /**
           * Create a request for the method "starred_species.remove".
           *
           * This request holds the parameters needed by the the bjorneparkappen_api server.  After setting
           * any optional parameters, call the {@link Remove#execute()} method to invoke the remote
           * operation. <p> {@link
           * Remove#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param content the {@link none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer}
           * @since 1.13
           */
          protected Remove(none.bjorneparkappen_api.model.ProtorpcMessagesCombinedContainer content) {
            super(BjorneparkappenApi.this, "POST", REST_PATH, content, Void.class);
          }

          @Override
          public Remove setAlt(java.lang.String alt) {
            return (Remove) super.setAlt(alt);
          }

          @Override
          public Remove setFields(java.lang.String fields) {
            return (Remove) super.setFields(fields);
          }

          @Override
          public Remove setKey(java.lang.String key) {
            return (Remove) super.setKey(key);
          }

          @Override
          public Remove setOauthToken(java.lang.String oauthToken) {
            return (Remove) super.setOauthToken(oauthToken);
          }

          @Override
          public Remove setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Remove) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Remove setQuotaUser(java.lang.String quotaUser) {
            return (Remove) super.setQuotaUser(quotaUser);
          }

          @Override
          public Remove setUserIp(java.lang.String userIp) {
            return (Remove) super.setUserIp(userIp);
          }

          @Override
          public Remove set(String parameterName, Object value) {
            return (Remove) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link BjorneparkappenApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link BjorneparkappenApi}. */
    @Override
    public BjorneparkappenApi build() {
      return new BjorneparkappenApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link BjorneparkappenApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setBjorneparkappenApiRequestInitializer(
        BjorneparkappenApiRequestInitializer bjorneparkappenapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(bjorneparkappenapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
